.container {
  max-width: $container-max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: calc($gutter-width / 2);
  padding-right: calc($gutter-width / 2);

  @each $type, $bp in $grid-breakpoints {
    @media screen and (min-width: $bp) {
      @if ($bp != $container-max-width) {
        &.#{$type} {
          max-width: $bp;
        }
      }
    }
  }

  &.fluid {
    max-width: 100%;
  }
  .row::after {
    content: "";
    display: table;
    clear: both;
  }

  .row {
    .col {
      float: left;
      padding-left: calc($gutter-width / 2);
      padding-right: calc($gutter-width / 2);
    }
    & .col[class*="push-"],
    & .col[class*="pull-"] {
      position: relative;
    }
    @each $type, $bp in $grid-breakpoints {
      @media screen and (min-width: $bp) {
        @for $i from 1 through $grid-columns {
          .col.#{$type}-#{$i} {
            @include make-column($i);
          }
          .col.offset-#{$type}-#{$i} {
            @include make-offset($i);
          }

          .col.pull-#{$type}-#{$i} {
            @include make-pull($i);
          }

          .col.push-#{$type}-#{$i} {
            @include make-push($i);
          }
        }
      }
    }

    @media screen and (max-width: 768px) {
      .col {
        width: 100%;
        padding-left: 0;
        padding-right: 0;
      }
    }
  }
}
